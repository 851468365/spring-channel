jdbc.driverClassName=com.mysql.jdbc.Driver
#jdbc.url=jdbc:oracle:thin:@127.0.0.1:1521:ORCL
jdbc.url=jdbc:mysql://localhost:3306/mytest?useUnicode=true&characterEncoding=UTF-8
jdbc.username=root
jdbc.password=root
#初始化连接数量
jdbc.initialSize=2
#最大并发连接数
jdbc.maxActive=5
jdbc.maxIdle=2
#最小空闲连接数
jdbc.minIdle=1
#获取连接等待超时的时间
jdbc.maxWait=5000

#用来检测连接是否有效的sql，要求是一个查询语句
jdbc.validationQuery=SELECT 1
#\u5355\u4F4D\uFF1A\u79D2\uFF0C\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684\u8D85\u65F6\u65F6\u95F4\u3002\u5E95\u5C42\u8C03\u7528jdbc Statement\u5BF9\u8C61\u7684void setQueryTimeout(int seconds)\u65B9\u6CD5
jdbc.validationQueryTimeout=3
#申请连接的时候检测
jdbc.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
jdbc.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
jdbc.testOnReturn=false

#\u8FDE\u63A5\u4FDD\u6D3B
#\u6253\u5F00KeepAlive\u4E4B\u540E\u7684\u6548\u679C\uFF1A
#1\u3001\u521D\u59CB\u5316\u8FDE\u63A5\u6C60\u65F6\u4F1A\u586B\u5145\u5230minIdle\u6570\u91CF\u3002
#2\u3001\u8FDE\u63A5\u6C60\u4E2D\u7684minIdle\u6570\u91CF\u4EE5\u5185\u7684\u8FDE\u63A5\uFF0C\u7A7A\u95F2\u65F6\u95F4\u8D85\u8FC7minEvictableIdleTimeMillis\uFF0C\u5219\u4F1A\u6267\u884CkeepAlive\u64CD\u4F5C\u3002
#3\u3001\u5F53\u7F51\u7EDC\u65AD\u5F00\u7B49\u539F\u56E0\u4EA7\u751F\u7684\u7531ExceptionSorter\u68C0\u6D4B\u51FA\u6765\u7684\u6B7B\u8FDE\u63A5\u88AB\u6E05\u9664\u540E\uFF0C\u81EA\u52A8\u8865\u5145\u8FDE\u63A5\u5230minIdle\u6570\u91CF\u3002
jdbc.keepAlive=true

#对于建立时间超过removeAbandonedTimeout的连接强制关闭
jdbc.removeAbandoned=true
#连接建立多长时间就需要被强制关闭（1800秒，也就是30分钟）
jdbc.removeAbandonedTimeout=1800

#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
jdbc.timeBetweenEvictionRunsMillis=60000
#连接保持空闲而不被驱逐的最长时间（Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis，则关闭当前连接）。单位是毫秒
jdbc.minEvictableIdleTimeMillis=60000

#是否打开PreparedStatementCache，并且指定每个连接上PSCache的大小
jdbc.poolPreparedStatements=true
#指定每个连接上PSCache的大小
jdbc.maxPoolPreparedStatementPerConnectionSize=500

#关闭abanded连接时输出错误日志
jdbc.logAbandoned=true
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 常用的插件有： 监控统计用的filter:stat     日志用的filter:log4j   防御sql注入的filter:wall
jdbc.filters=stat,wall